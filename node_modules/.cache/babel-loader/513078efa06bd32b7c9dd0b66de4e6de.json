{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis G. Enriquez\\\\Desktop\\\\crudSencilloReact-master\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Helmet } from 'react-helmet';\nimport { Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nconst data = [{\n  id: 1,\n  apunte: \"F=ma\",\n  fecha: \"22/8/2020\",\n  tags: \"Formula, Fisica, Fuerza\"\n}, {\n  id: 2,\n  apunte: \"No se que es react\",\n  fecha: \"22/8/2020\",\n  tags: \"Framework, Bootstrap, React\"\n}, {\n  id: 3,\n  apunte: \"Si se te va el internet, te ponen 0 aparentemente\",\n  fecha: \"22/8/2020\",\n  tags: \"Tigre, Elias, Recio\"\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: data,\n      modalActualizar: false,\n      modalInsertar: false,\n      form: {\n        id: \"\",\n        apunte: \"\",\n        fecha: \"\",\n        tags: \"\"\n      }\n    };\n\n    this.mostrarModalActualizar = dato => {\n      this.setState({\n        form: dato,\n        modalActualizar: true\n      });\n    };\n\n    this.cerrarModalActualizar = () => {\n      this.setState({\n        modalActualizar: false\n      });\n    };\n\n    this.mostrarModalInsertar = () => {\n      this.setState({\n        modalInsertar: true\n      });\n    };\n\n    this.cerrarModalInsertar = () => {\n      this.setState({\n        modalInsertar: false\n      });\n    };\n\n    this.editar = dato => {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map(registro => {\n        if (dato.id == registro.id) {\n          arreglo[contador].apunte = dato.apunte;\n          arreglo[contador].fecha = dato.fecha;\n          arreglo[contador].tags = dato.tags;\n        }\n\n        contador++;\n      });\n      this.setState({\n        data: arreglo,\n        modalActualizar: false\n      });\n    };\n\n    this.eliminar = dato => {\n      var opcion = window.confirm(\"Confirme que quiere eliminar el dato \" + dato.id);\n\n      if (opcion == true) {\n        var contador = 0;\n        var arreglo = this.state.data;\n        arreglo.map(registro => {\n          if (dato.id == registro.id) {\n            arreglo.splice(contador, 1);\n          }\n\n          contador++;\n        });\n        this.setState({\n          data: arreglo,\n          modalActualizar: false\n        });\n      }\n    };\n\n    this.insertar = () => {\n      var valorNuevo = { ...this.state.form\n      };\n      valorNuevo.id = this.state.data.length + 1;\n      var lista = this.state.data;\n      lista.push(valorNuevo);\n      this.setState({\n        modalInsertar: false,\n        data: lista\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        form: { ...this.state.form,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => this.mostrarModalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Crear\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Acci\\xF3n\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, this.state.data.map(dato => /*#__PURE__*/React.createElement(\"tr\", {\n      key: dato.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, dato.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, dato.apunte), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, dato.fecha), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, dato.tags), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.mostrarModalActualizar(dato),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Editar\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.eliminar(dato),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Eliminar\"))))))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalActualizar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Editar apunte:\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      readOnly: true,\n      type: \"text\",\n      value: this.state.form.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Apunte:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"apunte\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.form.apunte,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Fecha:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"fecha\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.form.fecha,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \"Tags:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"tags\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.form.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.editar(this.state.form),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, \"Editar\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.cerrarModalActualizar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Cancelar\"))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalInsertar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \"Nuevo apunte:\"))), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, \"ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      readOnly: true,\n      type: \"text\",\n      value: this.state.data.length + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, \"Apunte:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"apunte\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, \"Fecha:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"fecha\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"Tags:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"tags\",\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.insertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, \"Insertar\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      onClick: () => this.cerrarModalInsertar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, \"Cancelar\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"application\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, 'body { background-color: #3F4052; }'), /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, 'body { color: white; }'))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Luis G. Enriquez/Desktop/crudSencilloReact-master/src/App.js"],"names":["React","Helmet","Table","Button","Container","Modal","ModalHeader","ModalBody","FormGroup","ModalFooter","data","id","apunte","fecha","tags","App","Component","state","modalActualizar","modalInsertar","form","mostrarModalActualizar","dato","setState","cerrarModalActualizar","mostrarModalInsertar","cerrarModalInsertar","editar","contador","arreglo","map","registro","eliminar","opcion","window","confirm","splice","insertar","valorNuevo","length","lista","push","handleChange","e","target","name","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Helmet} from 'react-helmet';\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\n\nconst data = [\n  { id: 1, apunte: \"F=ma\", fecha: \"22/8/2020\", tags: \"Formula, Fisica, Fuerza\"},\n  { id: 2, apunte: \"No se que es react\", fecha: \"22/8/2020\", tags: \"Framework, Bootstrap, React\"},\n  { id: 3, apunte: \"Si se te va el internet, te ponen 0 aparentemente\", fecha: \"22/8/2020\", tags: \"Tigre, Elias, Recio\"},\n];\n\nclass App extends React.Component {\n  state = {\n    data: data,\n    modalActualizar: false,\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      apunte: \"\",\n      fecha: \"\",\n      tags: \"\",\n    },\n  };\n\n  mostrarModalActualizar = (dato) => {\n    this.setState({\n      form: dato,\n      modalActualizar: true,\n    });\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({\n      modalInsertar: true,\n    });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    var contador = 0;\n    var arreglo = this.state.data;\n    arreglo.map((registro) => {\n      if (dato.id == registro.id) {\n        arreglo[contador].apunte = dato.apunte;\n        arreglo[contador].fecha = dato.fecha;\n        arreglo[contador].tags = dato.tags;\n      }\n      contador++;\n    });\n    this.setState({ data: arreglo, modalActualizar: false });\n  };\n\n  eliminar = (dato) => {\n    var opcion = window.confirm(\"Confirme que quiere eliminar el dato \"+dato.id);\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n  insertar= ()=>{\n    var valorNuevo= {...this.state.form};\n    valorNuevo.id=this.state.data.length+1;\n    var lista= this.state.data;\n    lista.push(valorNuevo);\n    this.setState({ modalInsertar: false, data: lista });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n\n    return (\n\n      <>\n        <Container>\n        <br />\n          <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()}>Crear</Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Fecha</th>\n                <th>Tags</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato.id}>\n                  <td>{dato.id}</td>\n                  <td>{dato.apunte}</td>\n                  <td>{dato.fecha}</td>\n                  <td>{dato.tags}</td>\n                  <td>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={()=> this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n           <div><h3>Editar apunte:</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n               ID:\n              </label>\n            \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form.id}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Apunte: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"apunte\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.apunte}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Fecha: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"fecha\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.fecha}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Tags: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"tags\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.tags}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Editar\n            </Button>\n            <Button\n              color=\"danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n           <div><h3>Nuevo apunte:</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                ID: \n              </label>\n              \n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length+1}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Apunte: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"apunte\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Fecha: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"fecha\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            \n            <FormGroup>\n              <label>\n                Tags: \n              </label>\n              <input\n                className=\"form-control\"\n                name=\"tags\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <div className=\"application\">\n        <Helmet>\n            <style>{'body { background-color: #3F4052; }'}</style>\n            <style>{'body { color: white; }'}</style>\n        </Helmet>\n        </div>\n\n\n      </>\n\n      \n\n    );\n\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}